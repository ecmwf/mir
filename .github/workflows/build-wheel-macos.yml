# (C) Copyright 2024- ECMWF.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# In applying this licence, ECMWF does not waive the privileges and immunities
# granted to it by virtue of its status as an intergovernmental organisation
# nor does it submit to any jurisdiction.


name: Build Python Wheel for MacOS

on:
  # Trigger the workflow manually
  workflow_dispatch: ~

  # Allow to be called from another workflow
  workflow_call: ~

  # TODO automation trigger

jobs:
  build:
    name: Build macos wheel
    # TODO enable after all tested
    # strategy:
    #   matrix:
    #     arch_type: [ARM64, X64]
    # runs-on: [self-hosted, macOS, "${{ matrix.arch_type }}"]
    runs-on: [self-hosted, macOS, ARM64 ]
    steps:
        # TODO convert this to be matrix-friendly for python versions. Note it's a bit tricky since
        # we'd ideally not reexecute the compile step multiple times, but it
        # (non-essentially) depends on a matrix-based step
        # NOTE we dont use action checkout because it doesnt cleanup after itself correctly
      - run: |
          if [ -z "$(which uv)" ] ; then curl -LsSf https://astral.sh/uv/install.sh | sh ; fi
          # git clone --depth=1 --branch="wheelmaker" https://github.com/ecmwf/ci-utils wheelmaker # TODO use token here to get rid of the checkout action below
      - uses: actions/checkout@v4
        with:
          repository: ecmwf/ci-utils
          ref: wheelmaker
          path: ci-utils
          token: ${{ secrets.GH_REPO_READ_TOKEN }}
      - run: rm -rf proj && git clone --depth=1 --branch="${GITHUB_REF#refs/heads/}" https://github.com/$GITHUB_REPOSITORY proj
      - run: cd proj && ./build_chain.sh
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        # NOTE temporary thing until all the mess gets cleared
      - run: rm -rf ./* ./.git ./.github
